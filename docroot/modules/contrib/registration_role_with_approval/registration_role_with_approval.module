<?php

/**
 * @file
 *  This module lets an administrator select roles that will be available for selection on registration form.
 *  It also allows to select which roles needs admin approval. If user selects such a role during registration his account will be blocked
 *  until approved by admin.
 *
 * @author Tamer Al Zoubi [tamerzg@gmail.com]
 */

$roles = array();

/**
 * Implements hook_{form_id}_form_alter().
 */
function registration_role_with_approval_form_user_register_form_alter(&$form, $form_state, $form_id)
{
  $config = \Drupal::config('registration_role_with_approval.settings');
  $available_roles = $config->get('profile_roles');
  $form['advanced'] = array(
    '#type' => 'details',
    '#title' => t('Please tick one or more boxes below.'),
    '#weight' => '7',
    '#open' => TRUE,
  );
  if (!empty($available_roles)) {
    foreach ($available_roles as $role) {
      if ($role['needs_approval']) {
        $name = $name = "I want to be a NIMnews " . $role['label'] . " (*Needs admin approval)";
      } else {
        $name = "I want to be a NIMnews " . $role['label'];
      }
      $form['advanced'][$role['id']] = array(
        '#type' => 'checkbox',
        '#title' => $name,
      );
    }
    $form['actions']['submit']['#submit'][] = 'registration_role_with_approval_add_role';
  }
}

/**
 * Assign user roles when registration form is submitted.
 *
 */
function registration_role_with_approval_add_role($form, &$form_state)
{
  $config = \Drupal::config('registration_role_with_approval.settings');
  $available_roles = $config->get('profile_roles');
  $user = \Drupal\user\Entity\User::load($form_state->getValue('uid'));
  $roles_needs_approval = array();

  foreach ($available_roles as $role) {
    if ($form_state->getValue($role['id'])) {
      $user->addRole($role['id']);

      if ($role['needs_approval']) {
        $roles_needs_approval[] = $role;
        //Block account until approved by administrator
        $user->block();
      }
    }
  }
  $user->save();

  // Send email notification to configured mails
  if (!empty($roles_needs_approval)) {
    $params['user'] = $user;
    $params['roles_needs_approval'] = $roles_needs_approval;
    $mailing_list = explode(" ", $config->get('mailing_list'));
    if (!empty($mailing_list)) {
      foreach ($mailing_list as $email) {
        $mail_manager = Drupal::service('plugin.manager.mail');
        $mail_manager->mail('registration_role_with_approval', 'registration_with_approval', $email, \Drupal::currentUser()->getPreferredLangcode(), $params);
      }
    }
  }
}

/**
 * Implements hook_mail().
 */
function registration_role_with_approval_mail($key, &$message, $params)
{
  switch ($key) {
    case 'registration_with_approval':
      $roles = "";
      foreach ($params['roles_needs_approval'] as $roles_needs_approval) {
        $roles .= $roles_needs_approval['label'] . " ";
      }
      $mail_subject = \Drupal::config('registration_role_with_approval.settings')->get('email_subject');
      $mail_body = \Drupal::config('registration_role_with_approval.settings')->get('email_body');
      $mail_body = str_replace('!username', $params['user']->get('name')->value, $mail_body);
      $mail_body = str_replace('!roles', $roles, $mail_body);
      $message['subject'] = $mail_subject;
      $message['body'][] = $mail_body;
      break;
  }
}
